1.线程的概念
    线程，有时被称为轻量级进程(Lightweight Process，LWP)，是程序执行流的最小单元。
    一个标准的线程由线程ID，当前指令指针(PC)，寄存器集合和堆栈组成。
    另外，线程是进程中的一个实体，是被系统独立调度和分派的基本单位，线程自己不拥有系统资源，只拥有一点在运行中必不可少的资源，
    但它可与同属一个进程的其它线程共享进程所拥有的全部资源。
    一个线程可以创建和撤消另一个线程，同一进程中的多个线程之间可以并发执行。由于线程之间的相互制约，致使线程在运行中呈现出间断性。
    每一个程序都至少有一个线程，那就是程序本身。线程是程序中一个单一的顺序控制流程。
    在单个程序中同时运行多个线程完成不同的工作，称为多线程。
2.启动方式
3.常用方法
4.线程同步
    --synchronized
        a.锁的是对象而不是代码 synchronized(Object)
            锁的对象不能是String常量，以及Integer Long等。。。
        b.当没有指定锁对象时默认是锁的this.object；
        c.如果锁的是静态方法，那么锁的就是XX.class；
        d.锁定方法和非锁定方法是可以同时执行的;
        e.锁升级
            偏向锁，自旋锁，重量级锁。
